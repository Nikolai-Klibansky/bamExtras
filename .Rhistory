data_type_resamp=c(),
fn_par = list(
steep = expression(seq(0.21,0.99,length=nsim)),
SR_switch = expression(rep("1",nsim)) # Set SR_switch to 1 to use the Beverton-Holt SR function
),
fix_par = "set_steep"
)
smr_MCBE_i <- summarize_MCBE(dir_bam_sim = dir_bam_sim_i,
dir_bam_base=dir_bam_base_i
)
pdf(file.path(dir_bam_sim_i,"steepness_profiles.pdf"))
plot_profile(smr_MCBE_i)
dev.off()
# Move MCBE files to MCBE directory
# file.copy(
#   from=c(dir_bam_base_i,paste0(dir_bam_sim_i,c("","_fail"))),
#   to=dir_tmp,
#   overwrite = TRUE,
#   recursive = TRUE)
# unlink(c(dir_bam_base_i,paste0(dir_bam_sim_i,c("","_fail"))),recursive = TRUE)
files2move <- local({
a <- c(dir_bam_base_i,dir_bam_sim_i)
nm_dir_fail_i <- paste0(dir_bam_sim_i,"_fail")
if(nm_dir_fail_i%in%list.files()){
a <- c(a,nm_dir_fail_i)
}
a})
file.copy(
from=files2move,
to=dir_tmp,
overwrite = TRUE,
recursive = TRUE)
unlink(files2move,recursive = TRUE)
}
# Chunk 9: run_MCBE
dir_tmp <- "MCBE"
if(!dir.exists(dir_tmp)){
dir.create(dir_tmp)
}
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
commonNameAbb_i <- commonNameAbb[i]
dir_bam_base_i <- paste0(commonNameAbb_i,"_base")
dir_bam_sim_i <- paste0(commonNameAbb_i,"_prof")
# run MCBE
run_MCBE(commonName_i,
dir_bam_base = dir_bam_base_i,
dir_bam_sim  = dir_bam_sim_i
)
# Summarize MCBE
sim_summary_i <- summarize_MCBE(dir_bam_sim = dir_bam_sim_i,
dir_bam_base=dir_bam_base_i)
#  pdf(file.path(dir_bam_sim_i,"MCBE_plots.pdf"))
plot_MCBE(sim_summary_i,
dir_figs = dir_bam_sim_i)
#  dev.off()
# Move MCBE files to MCBE directory
files2move <- local({
a <- c(dir_bam_base_i,dir_bam_sim_i)
nm_dir_fail_i <- paste0(dir_bam_sim_i,"_fail")
if(nm_dir_fail_i%in%list.files()){
a <- c(a,nm_dir_fail_i)
}
a})
file.copy(
from=files2move,
to=dir_tmp,
overwrite = TRUE,
recursive = TRUE)
unlink(files2move,recursive = TRUE)
}
?run_proj
proj_VeSn <- run_proj(rdat_VermilionSnapper)
proj_VeSn$results
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
?annotate
Cn.L <- proj_VeSn$results$Cn.L
p <- ggplot(Cn.L,mapping=aes(x=year,y=Ln))+
geom_area(aes(fill=fleet))+
theme_bw()+
scale_fill_brewer(palette="Spectral")+
stat_summary(fun = sum, geom = "line", size = 1)+
stat_summary(fun = sum, geom = "point", size = 2)+
geom_vline(xintercept = endyr, linetype="dashed", size = 0.3)
p2 <- p + geom_text(aes(x=endyr, label="endyr\n",y=max(Ln)), angle=90)
print(p2)
endyr <- rdat_VermilionSnapper$parms$endyr
p <- ggplot(Cn.L,mapping=aes(x=year,y=Ln))+
geom_area(aes(fill=fleet))+
theme_bw()+
scale_fill_brewer(palette="Spectral")+
stat_summary(fun = sum, geom = "line", size = 1)+
stat_summary(fun = sum, geom = "point", size = 2)+
geom_vline(xintercept = endyr, linetype="dashed", size = 0.3)
p2 <- p + geom_text(aes(x=endyr, label="endyr\n",y=max(Ln)), angle=90)
print(p2)
p <- ggplot(Cn.L,mapping=aes(x=year,y=Ln))+
geom_area(aes(fill=fleet))+
theme_bw()+
scale_fill_brewer(palette="Spectral")+
stat_summary(fun = sum, geom = "line", size = 1)+
stat_summary(fun = sum, geom = "point", size = 2)+
geom_vline(xintercept = endyr, linetype="dashed", size = 0.3)
p2 <- p + annotate("text",x=endyr, label="endyr\n",y=max(Ln)), angle=90)
print(p2)
p <- ggplot(Cn.L,mapping=aes(x=year,y=Ln))+
geom_area(aes(fill=fleet))+
theme_bw()+
scale_fill_brewer(palette="Spectral")+
stat_summary(fun = sum, geom = "line", size = 1)+
stat_summary(fun = sum, geom = "point", size = 2)+
geom_vline(xintercept = endyr, linetype="dashed", size = 0.3)
p2 <- p + annotate("text",x=endyr, label="endyr\n",y=max(Ln), angle=90)
print(p2)
p <- ggplot(Cn.L,mapping=aes(x=year,y=Ln))+
geom_area(aes(fill=fleet))+
theme_bw()+
scale_fill_brewer(palette="Spectral")+
stat_summary(fun = sum, geom = "line", size = 1)+
stat_summary(fun = sum, geom = "point", size = 2)+
geom_vline(xintercept = endyr, linetype="dashed", size = 0.3)
p2 <- p #+ annotate("text",x=endyr, label="endyr\n",y=max(Ln), angle=90)
print(p2)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()
p
p + annotate("text", x = 4, y = 25, label = "Some text")
p <- ggplot(Cn.L,mapping=aes(x=year,y=Ln))+
geom_area(aes(fill=fleet))+
theme_bw()+
scale_fill_brewer(palette="Spectral")+
stat_summary(fun = sum, geom = "line", size = 1)+
stat_summary(fun = sum, geom = "point", size = 2)+
geom_vline(xintercept = endyr, linetype="dashed", size = 0.3)
p2 <- p + annotate("text",x=endyr, label="endyr\n",y=max(Ln), angle=90)
print(p2)
p <- ggplot(Cn.L,mapping=aes(x=year,y=Ln))+
geom_area(aes(fill=fleet))+
theme_bw()+
scale_fill_brewer(palette="Spectral")+
stat_summary(fun = sum, geom = "line", size = 1)+
stat_summary(fun = sum, geom = "point", size = 2)+
geom_vline(xintercept = endyr, linetype="dashed", size = 0.3)
p2 <- p + annotate("text",x=endyr, label="endyr\n",y=max(Cn.L$Ln), angle=90)
print(p2)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
?text
text(x=endyr,y=par("usr")[4*0.9],labels = "endyr",srt=90)
text(x=endyr,y=par("usr")[4*0.9],labels = "endyr",srt=90)
text(x=endyr,y=par("usr")[4]*0.9,labels = "endyr",srt=90)
text(x=endyr,y=par("usr")[4]*0.9,labels = "endyr",srt=90,pos=1)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
source("~/GitHub/myPackages/bamExtras/R/run_proj.r", echo=TRUE)
proj_VeSn <- run_proj(rdat_VermilionSnapper,plot=TRUE)
?text
dir_tmp <- "proj"
if(!dir.exists(dir_tmp)){
dir.create(dir_tmp)
}
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
run_proj(commonName_i)
}
commonName_i
run_proj(rdat_GrayTriggerfish)
commonName_i
commonName <-  c(#"AtlanticMenhaden",
"BlackSeaBass",
#"BluelineTilefish",
"Cobia",
"GagGrouper",
"GrayTriggerfish",
"GreaterAmberjack",
"RedGrouper",
"RedPorgy",
"RedSnapper",
"ScampGrouper",
"SnowyGrouper",
"SpanishMackerel",
"Tilefish",
"VermilionSnapper"
)
commonNameAbb <- abbreviate(commonName)
random_seed <- 12345
coresUse <- NULL
dir_base <- "base"
dir_MCBE <- "MCBE"
#Fref <-
dir_tmp <- "proj"
if(!dir.exists(dir_tmp)){
dir.create(dir_tmp)
}
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
run_proj(commonName_i)
}
dir_tmp <- "proj"
if(!dir.exists(dir_tmp)){
dir.create(dir_tmp)
}
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
run_proj(rdat_i)
}
commonName_i
commonName
i <- 1
commonName[i]
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
run_proj(rdat_i)
dir_tmp <- "proj"
if(!dir.exists(dir_tmp)){
dir.create(dir_tmp)
}
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
run_proj(rdat_i)
}
i
dir_tmp <- "proj"
if(!dir.exists(dir_tmp)){
dir.create(dir_tmp)
}
for(i in 5:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
run_proj(rdat_i)
}
i
dir_tmp <- "proj"
if(!dir.exists(dir_tmp)){
dir.create(dir_tmp)
}
for(i in 6:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
run_proj(rdat_i)
}
i
length(commonName)
i <- run_proj(rdat_GrayTriggerfish,key_lenprob = c("D.rHDs"="len.cv.L", "L.rGNs"="len.cv.L"))
run_proj(rdat_GrayTriggerfish,
stochastic = FALSE,
nm_yr_p = c(
"endyr","endyr_dev_rec","endyr_rec_phase2","endyr_rec_spr", "endyr_sel_b01","endyr_proj",
"styr_regs",
"nyr","nyr_dev_rec","nyr_rec_spr"
),
# nyp_cur = nyp_cur_proj,
# nyp = nyp_proj,
nm_comp_sfx = c("a","b"),
F_proj=F_proj_i,
# plot=TRUE,
key_lenprob = c("D.rHDs"="len.cv.L", "L.rGNs"="len.cv.L")
)
run_proj(rdat_GrayTriggerfish,
stochastic = FALSE,
nm_yr_p = c(
"endyr","endyr_dev_rec","endyr_rec_phase2","endyr_rec_spr", "endyr_sel_b01","endyr_proj",
"styr_regs",
"nyr","nyr_dev_rec","nyr_rec_spr"
),
# nyp_cur = nyp_cur_proj,
# nyp = nyp_proj,
nm_comp_sfx = c("a","b"),
# F_proj=F_proj_i,
# plot=TRUE,
key_lenprob = c("D.rHDs"="len.cv.L", "L.rGNs"="len.cv.L")
)
run_proj(rdat_GrayTriggerfish,
stochastic = FALSE,
nm_yr_p = c(
"endyr","endyr_dev_rec","endyr_rec_phase2","endyr_rec_spr", "endyr_sel_b01","endyr_proj",
"styr_regs",
"nyr","nyr_dev_rec","nyr_rec_spr"
),
# nyp_cur = nyp_cur_proj,
# nyp = nyp_proj,
#nm_comp_sfx = c("a","b"),
# F_proj=F_proj_i,
# plot=TRUE,
key_lenprob = c("D.rHDs"="len.cv.L", "L.rGNs"="len.cv.L")
)
run_proj(rdat_GrayTriggerfish,
stochastic = FALSE,
nm_yr_p = c(
"endyr","endyr_dev_rec","endyr_rec_phase2","endyr_rec_spr", "endyr_sel_b01","endyr_proj",
"styr_regs",
"nyr","nyr_dev_rec","nyr_rec_spr"
),
# nyp_cur = nyp_cur_proj,
# nyp = nyp_proj,
#nm_comp_sfx = c("a","b"),
# F_proj=F_proj_i,
# plot=TRUE,
#key_lenprob = c("D.rHDs"="len.cv.L", "L.rGNs"="len.cv.L")
)
run_proj(rdat_GrayTriggerfish,
stochastic = FALSE,
# nm_yr_p = c(
#   "endyr","endyr_dev_rec","endyr_rec_phase2","endyr_rec_spr", "endyr_sel_b01","endyr_proj",
#   "styr_regs",
#   "nyr","nyr_dev_rec","nyr_rec_spr"
# ),
# nyp_cur = nyp_cur_proj,
# nyp = nyp_proj,
#nm_comp_sfx = c("a","b"),
# F_proj=F_proj_i,
plot=TRUE,
key_lenprob = c("D.rHDs"="len.cv.L", "L.rGNs"="len.cv.L")
)
run_proj(rdat_GrayTriggerfish,
stochastic = FALSE,
nm_yr_p = c(
"endyr","endyr_dev_rec","endyr_rec_phase2","endyr_rec_spr", "endyr_sel_b01","endyr_proj",
"styr_regs",
"nyr","nyr_dev_rec","nyr_rec_spr"
),
# nyp_cur = nyp_cur_proj,
# nyp = nyp_proj,
#nm_comp_sfx = c("a","b"),
# F_proj=F_proj_i,
plot=TRUE,
key_lenprob = c("D.rHDs"="len.cv.L", "L.rGNs"="len.cv.L")
)
run_proj(rdat_GrayTriggerfish,
stochastic = FALSE,
nm_yr_p = c(
"endyr","endyr_dev_rec","endyr_rec_phase2","endyr_rec_spr", "endyr_sel_b01","endyr_proj",
"styr_regs",
"nyr","nyr_dev_rec","nyr_rec_spr"
),
# nyp_cur = nyp_cur_proj,
# nyp = nyp_proj,
nm_comp_sfx = c("a","b"),
# F_proj=F_proj_i,
plot=TRUE,
key_lenprob = c("D.rHDs"="len.cv.L", "L.rGNs"="len.cv.L")
)
dir_tmp <- "proj"
if(!dir.exists(dir_tmp)){
dir.create(dir_tmp)
}
commonName <-  c(#"AtlanticMenhaden",
"BlackSeaBass",
#"BluelineTilefish",
"Cobia",
"GagGrouper",
#"GrayTriggerfish",
"GreaterAmberjack",
"RedGrouper",
"RedPorgy",
"RedSnapper",
"ScampGrouper",
"SnowyGrouper",
"SpanishMackerel",
"Tilefish",
"VermilionSnapper"
)
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
run_proj(rdat_i)
}
i
commonName_i
commonName <-  c(#"AtlanticMenhaden",
"BlackSeaBass",
#"BluelineTilefish",
"Cobia",
"GagGrouper",
#"GrayTriggerfish",
#"GreaterAmberjack",
"RedGrouper",
"RedPorgy",
"RedSnapper",
"ScampGrouper",
"SnowyGrouper",
"SpanishMackerel",
"Tilefish",
"VermilionSnapper"
)
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
run_proj(rdat_i)
}
commonName_i
commonName <-  c(#"AtlanticMenhaden",
"BlackSeaBass",
#"BluelineTilefish",
"Cobia",
"GagGrouper",
#"GrayTriggerfish",
#"GreaterAmberjack",
"RedGrouper",
"RedPorgy",
"RedSnapper",
"ScampGrouper",
"SnowyGrouper",
#"SpanishMackerel",
"Tilefish",
"VermilionSnapper"
)
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
run_proj(rdat_i)
}
commonName_i
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
run_proj(rdat_i,plot=TRUE)
}
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
pdf(file.path(dir_tmp,paste(commonName_i,"pdf",sep=".")))
run_proj_out <- run_proj(rdat_i,plot=TRUE)
dev.off()
}
?save
?dput
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
pdf(file.path(dir_tmp,paste(commonName_i,"pdf",sep=".")))
run_proj_out <- run_proj(rdat_i,plot=TRUE)
saveRDS(x=run_proj_out,file=file.path(dir_tmp,paste(commonName_i,"rds",sep=".")))
dev.off()
}
run_proj_out <- run_proj(rdat_i,plot=TRUE)
saveRDS(object=run_proj_out,file=file.path(dir_tmp,paste(commonName_i,"rds",sep=".")))
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
pdf(file.path(dir_tmp,paste(commonName_i,"pdf",sep=".")))
run_proj_out <- run_proj(rdat_i,plot=TRUE)
saveRDS(object=run_proj_out,file=file.path(dir_tmp,paste(commonName_i,"rds",sep=".")))
dev.off()
}
# There are some other arguments that need to be specified for gray triggerfish to work.
commonName_i <- "GrayTriggerfish"
rdat_i <- get(paste("rdat",commonName_i,sep="_"))
pdf(file.path(dir_tmp,paste(commonName_i,"pdf",sep=".")))
run_proj_out <- run_proj(rdat_GrayTriggerfish,
stochastic = FALSE,
nm_yr_p = c(
"endyr","endyr_dev_rec","endyr_rec_phase2","endyr_rec_spr", "endyr_sel_b01","endyr_proj",
"styr_regs",
"nyr","nyr_dev_rec","nyr_rec_spr"
),
nm_comp_sfx = c("a","b"),
plot=TRUE,
key_lenprob = c("D.rHDs"="len.cv.L", "L.rGNs"="len.cv.L")
)
saveRDS(object=run_proj_out,file=file.path(dir_tmp,paste(commonName_i,"rds",sep=".")))
dev.off()
run_proj_out <- run_proj(rdat_GrayTriggerfish,
stochastic = FALSE,
# nm_yr_p = c(
#   "endyr","endyr_dev_rec","endyr_rec_phase2","endyr_rec_spr", "endyr_sel_b01","endyr_proj",
#   "styr_regs",
#   "nyr","nyr_dev_rec","nyr_rec_spr"
# ),
nm_comp_sfx = c("a","b"),
plot=TRUE,
key_lenprob = c("D.rHDs"="len.cv.L", "L.rGNs"="len.cv.L")
)
library(bamExtras)
library(bamExtras)
